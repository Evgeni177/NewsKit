// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`get default presets functions getMarginPreset for responsive tokens when props.overrides is set with breakpoint object with no override path provided: breakpoint-override-object:no-path-end 1`] = `
Object {
  "@media screen and (min-width: 1440px)": Object {
    "margin": "theOverrideToken-value-space",
  },
  "margin": "theOverrideToken-value-space",
}
`;

exports[`get default presets functions getMarginPreset for responsive tokens when props.overrides is set with breakpoint object with no override path provided: breakpoint-override-object:with-path-end 1`] = `
Object {
  "@media screen and (min-width: 1440px)": Object {
    "margin": "theOverrideToken-value-space",
  },
  "margin": "theOverrideToken-value-space",
}
`;

exports[`get default presets functions getMarginPreset for responsive tokens when props.overrides is set with breakpoint object with override path as empty string: breakpoint-override-object:no-path-end 1`] = `
Object {
  "@media screen and (min-width: 1440px)": Object {
    "margin": "theOverrideToken-value-space",
  },
  "margin": "theOverrideToken-value-space",
}
`;

exports[`get default presets functions getMarginPreset for responsive tokens when props.overrides is set with breakpoint object with override path as empty string: breakpoint-override-object:with-path-end 1`] = `
Object {
  "@media screen and (min-width: 1440px)": Object {
    "margin": "theOverrideToken-value-space",
  },
  "margin": "theOverrideToken-value-space",
}
`;

exports[`get default presets functions getMarginPreset for responsive tokens when props.overrides is set with breakpoint object with override path as empty string: breakpoint-override-object:with-path-end 2`] = `
Object {
  "@media screen and (min-width: 1440px)": Object {
    "margin": "theOverrideToken-value-space",
  },
  "margin": "theOverrideToken-value-space",
}
`;

exports[`get default presets functions getMarginPreset for responsive tokens when props.overrides is set with breakpoint object with override path: breakpoint-override-object:with-path-end 1`] = `
Object {
  "@media screen and (min-width: 1440px)": Object {
    "margin": "theOverrideToken-value-space",
  },
  "margin": "theOverrideToken-value-space",
}
`;

exports[`get default presets functions getMarginPreset for responsive tokens with no override path provided, with and without token type at the end: default:no-path-end 1`] = `
Object {
  "@media screen and (min-width: 960px)": Object {
    "margin": "theDefaultToken-value-space",
  },
  "margin": "theDefaultToken-value-space",
}
`;

exports[`get default presets functions getMarginPreset for responsive tokens with no override path provided, with and without token type at the end: default:with-path-end 1`] = `
Object {
  "@media screen and (min-width: 960px)": Object {
    "margin": "theDefaultToken-value-space",
  },
  "margin": "theDefaultToken-value-space",
}
`;

exports[`get default presets functions getPaddingPreset for responsive tokens when props.overrides is set with breakpoint object with no override path provided: breakpoint-override-object:no-path-end 1`] = `
Object {
  "@media screen and (min-width: 1440px)": Object {
    "padding": "theOverrideToken-value-space",
  },
  "padding": "theOverrideToken-value-space",
}
`;

exports[`get default presets functions getPaddingPreset for responsive tokens when props.overrides is set with breakpoint object with no override path provided: breakpoint-override-object:with-path-end 1`] = `
Object {
  "@media screen and (min-width: 1440px)": Object {
    "padding": "theOverrideToken-value-space",
  },
  "padding": "theOverrideToken-value-space",
}
`;

exports[`get default presets functions getPaddingPreset for responsive tokens when props.overrides is set with breakpoint object with override path as empty string: breakpoint-override-object:no-path-end 1`] = `
Object {
  "@media screen and (min-width: 1440px)": Object {
    "padding": "theOverrideToken-value-space",
  },
  "padding": "theOverrideToken-value-space",
}
`;

exports[`get default presets functions getPaddingPreset for responsive tokens when props.overrides is set with breakpoint object with override path as empty string: breakpoint-override-object:with-path-end 1`] = `
Object {
  "@media screen and (min-width: 1440px)": Object {
    "padding": "theOverrideToken-value-space",
  },
  "padding": "theOverrideToken-value-space",
}
`;

exports[`get default presets functions getPaddingPreset for responsive tokens when props.overrides is set with breakpoint object with override path as empty string: breakpoint-override-object:with-path-end 2`] = `
Object {
  "@media screen and (min-width: 1440px)": Object {
    "padding": "theOverrideToken-value-space",
  },
  "padding": "theOverrideToken-value-space",
}
`;

exports[`get default presets functions getPaddingPreset for responsive tokens when props.overrides is set with breakpoint object with override path: breakpoint-override-object:with-path-end 1`] = `
Object {
  "@media screen and (min-width: 1440px)": Object {
    "padding": "theOverrideToken-value-space",
  },
  "padding": "theOverrideToken-value-space",
}
`;

exports[`get default presets functions getPaddingPreset for responsive tokens with no override path provided, with and without token type at the end: default:no-path-end 1`] = `
Object {
  "@media screen and (min-width: 960px)": Object {
    "padding": "theDefaultToken-value-space",
  },
  "padding": "theDefaultToken-value-space",
}
`;

exports[`get default presets functions getPaddingPreset for responsive tokens with no override path provided, with and without token type at the end: default:with-path-end 1`] = `
Object {
  "@media screen and (min-width: 960px)": Object {
    "padding": "theDefaultToken-value-space",
  },
  "padding": "theDefaultToken-value-space",
}
`;

exports[`get default presets functions getSpacingInline for responsive tokens when props.overrides is set with breakpoint object with no override path provided: breakpoint-override-object:no-path-end 1`] = `
Object {
  "@media screen and (min-width: 1440px)": Object {
    "marginRight": "theOverrideToken-value-space",
  },
  "marginRight": "theOverrideToken-value-space",
}
`;

exports[`get default presets functions getSpacingInline for responsive tokens when props.overrides is set with breakpoint object with no override path provided: breakpoint-override-object:with-path-end 1`] = `
Object {
  "@media screen and (min-width: 1440px)": Object {
    "marginRight": "theOverrideToken-value-space",
  },
  "marginRight": "theOverrideToken-value-space",
}
`;

exports[`get default presets functions getSpacingInline for responsive tokens when props.overrides is set with breakpoint object with override path as empty string: breakpoint-override-object:no-path-end 1`] = `
Object {
  "@media screen and (min-width: 1440px)": Object {
    "marginRight": "theOverrideToken-value-space",
  },
  "marginRight": "theOverrideToken-value-space",
}
`;

exports[`get default presets functions getSpacingInline for responsive tokens when props.overrides is set with breakpoint object with override path as empty string: breakpoint-override-object:with-path-end 1`] = `
Object {
  "@media screen and (min-width: 1440px)": Object {
    "marginRight": "theOverrideToken-value-space",
  },
  "marginRight": "theOverrideToken-value-space",
}
`;

exports[`get default presets functions getSpacingInline for responsive tokens when props.overrides is set with breakpoint object with override path as empty string: breakpoint-override-object:with-path-end 2`] = `
Object {
  "@media screen and (min-width: 1440px)": Object {
    "marginRight": "theOverrideToken-value-space",
  },
  "marginRight": "theOverrideToken-value-space",
}
`;

exports[`get default presets functions getSpacingInline for responsive tokens when props.overrides is set with breakpoint object with override path: breakpoint-override-object:with-path-end 1`] = `
Object {
  "@media screen and (min-width: 1440px)": Object {
    "marginRight": "theOverrideToken-value-space",
  },
  "marginRight": "theOverrideToken-value-space",
}
`;

exports[`get default presets functions getSpacingInline for responsive tokens with no override path provided, with and without token type at the end: default:no-path-end 1`] = `
Object {
  "marginRight": "",
}
`;

exports[`get default presets functions getSpacingInline for responsive tokens with no override path provided, with and without token type at the end: default:with-path-end 1`] = `
Object {
  "marginRight": "",
}
`;

exports[`get default presets functions getSpacingStack for responsive tokens when props.overrides is set with breakpoint object with no override path provided: breakpoint-override-object:no-path-end 1`] = `
Object {
  "@media screen and (min-width: 1440px)": Object {
    "marginBottom": "theOverrideToken-value-space",
  },
  "marginBottom": "theOverrideToken-value-space",
}
`;

exports[`get default presets functions getSpacingStack for responsive tokens when props.overrides is set with breakpoint object with no override path provided: breakpoint-override-object:with-path-end 1`] = `
Object {
  "@media screen and (min-width: 1440px)": Object {
    "marginBottom": "theOverrideToken-value-space",
  },
  "marginBottom": "theOverrideToken-value-space",
}
`;

exports[`get default presets functions getSpacingStack for responsive tokens when props.overrides is set with breakpoint object with override path as empty string: breakpoint-override-object:no-path-end 1`] = `
Object {
  "@media screen and (min-width: 1440px)": Object {
    "marginBottom": "theOverrideToken-value-space",
  },
  "marginBottom": "theOverrideToken-value-space",
}
`;

exports[`get default presets functions getSpacingStack for responsive tokens when props.overrides is set with breakpoint object with override path as empty string: breakpoint-override-object:with-path-end 1`] = `
Object {
  "@media screen and (min-width: 1440px)": Object {
    "marginBottom": "theOverrideToken-value-space",
  },
  "marginBottom": "theOverrideToken-value-space",
}
`;

exports[`get default presets functions getSpacingStack for responsive tokens when props.overrides is set with breakpoint object with override path as empty string: breakpoint-override-object:with-path-end 2`] = `
Object {
  "@media screen and (min-width: 1440px)": Object {
    "marginBottom": "theOverrideToken-value-space",
  },
  "marginBottom": "theOverrideToken-value-space",
}
`;

exports[`get default presets functions getSpacingStack for responsive tokens when props.overrides is set with breakpoint object with override path: breakpoint-override-object:with-path-end 1`] = `
Object {
  "@media screen and (min-width: 1440px)": Object {
    "marginBottom": "theOverrideToken-value-space",
  },
  "marginBottom": "theOverrideToken-value-space",
}
`;

exports[`get default presets functions getSpacingStack for responsive tokens with no override path provided, with and without token type at the end: default:no-path-end 1`] = `
Object {
  "marginBottom": "",
}
`;

exports[`get default presets functions getSpacingStack for responsive tokens with no override path provided, with and without token type at the end: default:with-path-end 1`] = `
Object {
  "marginBottom": "",
}
`;

exports[`get default presets functions getTypographyPreset for responsive tokens when props.overrides is set with breakpoint object with no override path provided: breakpoint-override-object:no-path-end 1`] = `
Object {
  "@media screen and (min-width: 1440px)": Object {
    "fontFamily": "theOverrideToken-value-typographyPresets",
  },
  "fontFamily": "theOverrideToken-value-typographyPresets",
}
`;

exports[`get default presets functions getTypographyPreset for responsive tokens when props.overrides is set with breakpoint object with no override path provided: breakpoint-override-object:with-path-end 1`] = `
Object {
  "@media screen and (min-width: 1440px)": Object {
    "fontFamily": "theOverrideToken-value-typographyPresets",
  },
  "fontFamily": "theOverrideToken-value-typographyPresets",
}
`;

exports[`get default presets functions getTypographyPreset for responsive tokens when props.overrides is set with breakpoint object with override path as empty string: breakpoint-override-object:no-path-end 1`] = `
Object {
  "@media screen and (min-width: 1440px)": Object {
    "fontFamily": "theOverrideToken-value-typographyPresets",
  },
  "fontFamily": "theOverrideToken-value-typographyPresets",
}
`;

exports[`get default presets functions getTypographyPreset for responsive tokens when props.overrides is set with breakpoint object with override path as empty string: breakpoint-override-object:with-path-end 1`] = `
Object {
  "@media screen and (min-width: 1440px)": Object {
    "fontFamily": "theOverrideToken-value-typographyPresets",
  },
  "fontFamily": "theOverrideToken-value-typographyPresets",
}
`;

exports[`get default presets functions getTypographyPreset for responsive tokens when props.overrides is set with breakpoint object with override path as empty string: breakpoint-override-object:with-path-end 2`] = `
Object {
  "@media screen and (min-width: 1440px)": Object {
    "fontFamily": "theOverrideToken-value-typographyPresets",
  },
  "fontFamily": "theOverrideToken-value-typographyPresets",
}
`;

exports[`get default presets functions getTypographyPreset for responsive tokens when props.overrides is set with breakpoint object with override path: breakpoint-override-object:with-path-end 1`] = `
Object {
  "@media screen and (min-width: 1440px)": Object {
    "fontFamily": "theOverrideToken-value-typographyPresets",
  },
  "fontFamily": "theOverrideToken-value-typographyPresets",
}
`;

exports[`get default presets functions getTypographyPreset for responsive tokens with no override path provided, with and without token type at the end: default:no-path-end 1`] = `
Object {
  "@media screen and (min-width: 960px)": Object {
    "fontFamily": "theDefaultToken-value-typographyPresets",
  },
  "fontFamily": "theDefaultToken-value-typographyPresets",
}
`;

exports[`get default presets functions getTypographyPreset for responsive tokens with no override path provided, with and without token type at the end: default:with-path-end 1`] = `
Object {
  "@media screen and (min-width: 960px)": Object {
    "fontFamily": "theDefaultToken-value-typographyPresets",
  },
  "fontFamily": "theDefaultToken-value-typographyPresets",
}
`;
